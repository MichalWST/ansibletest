- name: Archive old big files
  hosts: nfs
  gather_facts: yes
  become: true
  vars:
    size_threshold_kb: 5120  # 5 MB in KB
    file_path: /tmp/test.txt
    destination_path: /tmp/old/

  tasks:
    - name: Gather file details
      ansible.builtin.stat:
        path: "{{ file_path }}"
      register: file_stat

    - name: Convert file size to KB for comparison
      set_fact:
        file_size_kb: "{{ (file_stat.stat.size / 1024) | int }}"

    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ destination_path }}"
        state: directory

    - name: Check available disk space in destination
      ansible.builtin.shell:
        cmd: df "{{ destination_path }}" | awk 'NR==2{print $4}'
      register: disk_space_raw
      changed_when: false

    - name: Convert disk space to bytes for comparison
      set_fact:
        disk_space_bytes: "{{ (disk_space_raw.stdout | int) * 1024 }}" #DF returns value in KB, converting to bytes

    - name: Move and compress the file if size >threshold and enough space
      block:
        - name: Copy the file to destination
          ansible.builtin.copy:
            src: "{{ file_path }}"
            dest: "{{ destination_path }}{{ file_path | basename }}"
            remote_src: yes

        - name: Clear contents of the original file
          ansible.builtin.copy:
            content: ''
            dest: "{{ file_path }}"

        - name: Compress the file in destination and remove original
          ansible.builtin.shell:
            cmd: "tar -czf {{ destination_path }}{{ file_path | basename }}-{{ ansible_date_time.iso8601_basic_short }}.tar.gz --remove-files -C {{ destination_path }} {{ file_path | basename }}"
            warn: false
      when:
        - file_stat.stat.exists
        - (file_size_kb | int) > size_threshold_kb
        - (disk_space_bytes | int) > (file_stat.stat.size | int)





