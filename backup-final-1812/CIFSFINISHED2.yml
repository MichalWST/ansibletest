---
- name: Set up Samba (CIFS) host
  hosts: cifs_hosts
  become: yes
  roles:
    - update
  tasks:
    - name: Include vault-encrypted credentials
      include_vars: vault/CIFS_Credentials.yml

    - name: Install samba package
      apt:
        name: samba
        state: present

    - name: Create /shares/smb directory) #To be shared as CIFS to clients
      file:
         path: /shares/smb
         state: directory
         owner: wst
         group: wst
         mode: "0755"


    - name: Move existing smb.conf to smb.conf.old #Backing up default config file
      command: mv /etc/samba/smb.conf /etc/samba/smb.conf.old
      args:
        creates: /etc/samba/smb.conf.old #mv will only be performed if .old file doesn't exist
      changed_when: false  # Avoids marking the task as changed if the file already exists

    - name: Copy pre-configured smb.conf
      copy:
        src: files/smb.conf
        dest: /etc/samba/smb.conf
        backup: yes #If file alrady exists on the server, backup with timestamp will be made
      notify: Restart smbd.service #If tasks output is "changed" - go to "Restart smbd.service"

    - name: Add user to smbpasswd #One of the ways to work around passowrd prompts. If performed multiple timeas on the same user - no changes will be made.
      changed_when: false # Task will always show as "changed". Suppressing this output. Failure will still stop the playbook.
      expect:
        command: smbpasswd -a wst #One way to work with interactive prompts. Adds user wst to samba
        responses:
          'New SMB password:': '{{ username }}'
          'Retype new SMB password:': '{{ password }}'
  handlers:
    - name: Restart smbd.service #Handler for "Copy pre-configured smb.conf"
      service:
        name: smbd
        state: restarted

- name: Configure CIFS on client Servers
  hosts: cifs_clients
  become: yes
  roles:
    - update
  tasks:
    - name: Install cifs-utils
      apt:
        name: cifs-utils
        state: present

    - name: Include vault-encrypted credentials
      include_vars: vault/CIFS_Credentials.yml


    - name: Create file with password
      file:
        path: /root/cifs_password
        state: touch
        mode: 'u=r,o='

    - name: Add content to the file
      lineinfile:
        path: /root/cifs_password
        line: "{{ item }}"
        create: yes
      with_items:
        - "username={{ username }}"
        - "password={{ password }}"
      no_log: true

    - name: Mount CIFS #Mount module with state mounted - creates path if needed, mounts filesystem and adds fstab entry.
      mount:
        path: /mnt/remote4
        state: mounted
        src: "//192.168.31.235/smb"
        fstype: cifs
        opts: "credentials=/root/cifs_password,uid=wst,gid=wst,file_mode=0755,dir_mode=0755"

